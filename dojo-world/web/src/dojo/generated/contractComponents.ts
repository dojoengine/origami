/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";

export type ContractComponents = Awaited<ReturnType<typeof defineContractComponents>>;

export function defineContractComponents(world: World) {
  return {
    DojoFren: (() => {
      return defineComponent(
        world,
        { player_id: RecsType.BigInt, kind: RecsType.Number, spawned: RecsType.Number },
        {
          metadata: {
            name: "dojo_world-DojoFren",
            types: ["contractaddress","enum","u32"],
            customTypes: ["DojoFrenKind"],
          },
        }
      );
    })(),
    // Quest: (() => {
    //   return defineComponent(
    //     world,
    //     { id: RecsType.BigInt, name: RecsType.String, desc: RecsType.String, image_uri: RecsType.Number, quest_type: RecsType.Number, completion: { all: RecsType.StringArray, any: RecsType.StringArray }, availability: { all: RecsType.StringArray, any: RecsType.StringArray }, external: RecsType.Number },
    //     {
    //       metadata: {
    //         name: "dojo_world-Quest",
    //         types: ["felt252","enum","enum","enum"],
    //         customTypes: ["Option<T>","QuestType","QuestRules","QuestRules","Option<T>"],
    //       },
    //     }
    //   );
    // })(),
    QuestClaimed: (() => {
      return defineComponent(
        world,
        { quest_id: RecsType.BigInt, player_id: RecsType.BigInt, claimed: RecsType.Boolean },
        {
          metadata: {
            name: "dojo_world-QuestClaimed",
            types: ["felt252","contractaddress","bool"],
            customTypes: [],
          },
        }
      );
    })(),
    QuestCounter: (() => {
      return defineComponent(
        world,
        { quest_id: RecsType.BigInt, player_id: RecsType.BigInt, count: RecsType.BigInt },
        {
          metadata: {
            name: "dojo_world-QuestCounter",
            types: ["felt252","contractaddress","u64"],
            customTypes: [],
          },
        }
      );
    })(),
  };
}
